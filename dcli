#!/bin/bash

cd $(dirname "$0")
source ../dcli.env

bold=$(tput bold)
red=$(tput setaf 1)
green=$(tput setaf 2)
title=${bold}${red}
reset=$(tput sgr0)

function dcli_compose() {
    docker-compose -f ../dcli.yml -p ${PROJECT_NAME} ${*}
}

function dcli_shell() {
    echo -e "${green}DCLI: Open shell in ${bold}$1${reset}${green} docker container${reset}"
    dcli_compose run --rm $1 bash
}

function dcli_start() {
    echo -e "${green}DCLI: Start all docker containers${reset}"
    dcli_compose up -d --no-recreate
}

function dcli_restart() {
    echo -e "${green}DCLI: Restart all docker containers${reset}"
    dcli_compose restart
}

function dcli_stop() {
    echo -e "${green}DCLI: Stop all docker containers${reset}"
    dcli_compose stop
}

function dcli_recreate() {
    echo -e "${green}DCLI: Recreate all docker containers${reset}"
    dcli_compose up -d
}

function dcli_destroy() {
    echo -e "${green}DCLI: Destroy all docker containers${reset}"
    dcli_compose down
}

echo -e "${title}Docker CLI${reset}"

if [ -z "$1" ]; then
    echo -e "${green}About:${reset}"
    echo -e "Docker CLI platform released for simple development with Docker."
    echo -e "Supported by IOXICO (https://ioxico.com/)."
    echo -e "${green}Commands:${reset}"
    echo -e "* start — start all docker containers;"
    echo -e "* restart — restart all docker containers;"
    echo -e "* stop — stop all docker containers;"
    echo -e "* recreate — recreate all docker containers;"
    echo -e "* destroy — destroy all docker containers;"
    echo -e "* shell CONTAINER — open shell in docker container (default php);"
    echo -e "${red}* any other command executed as docker-compose command.${reset}"
elif [ "$1" = "start" ]; then
    dcli_start
elif [ "$1" = "restart" ]; then
    dcli_restart
elif [ "$1" = "stop" ]; then
    dcli_stop
elif [ "$1" = "recreate" ]; then
    dcli_recreate
elif [ "$1" = "destroy" ]; then
    dcli_destroy
elif [ "$1" = "shell" ]; then
    if [ -n "$2" ]; then
        dcli_shell $2
    else
        dcli_shell php
    fi
else
    dcli_compose ${*}
fi
